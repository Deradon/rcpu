class ScreenExtension
  def initialize(array, addr, columns)
    @array = array
    @addr = addr
    @start = addr.first
    @columns = columns
  end

  def start
    print "\e7\e[H\e[2J\e8"
    @addr.each { |a| self[a] = @array[a] }
  end

  def stop
    print "\e[17;1H"
  end

  def [](key)
    @array[key]
  end

  def []=(key, value)
    @array[key] = value
    idx = key - @start
    rows, cols = idx.divmod(@columns)
    print "\e7\e[#{rows+1};#{cols+1}H#{value.chr}\e8"
  end
end

extension 0x8000..0x8400, ScreenExtension, 32

block :main do
  SET a, :string
  SET b, 0x8000

  label :write
  SET [b], [a]
  ADD a, 1
  ADD b, 1
  IFE [a], 0
    SUB pc, 1
  SET pc, :write

  data :string, "**** RCPU-16 ****".center(32) +
    "Video: WORKING!\0"
end

